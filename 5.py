from pprint import pprint
#5.1
"""В задании создан словарь, с информацией о разных устройствах.
Необходимо запросить у пользователя ввод имени устройства (r1, r2 или sw1). И вывести информацию о соответствующем
 устройстве на стандартный поток вывода (информация будет в виде словаря).
 Введите имя устройства: r1
{'location': '21 New Globe Walk', 'vendor': 'Cisco', 'model': '4451', 'ios': '15.4', 'ip': '10.255.0.1'}
"""
london_co = {
    "r1": {
        "location": "21 New Globe Walk",
        "vendor": "Cisco",
        "model": "4451",
        "ios": "15.4",
        "ip": "10.255.0.1"
    },
    "r2": {
        "location": "21 New Globe Walk",
        "vendor": "Cisco",
        "model": "4451",
        "ios": "15.4",
        "ip": "10.255.0.2"
    },
    "sw1": {
        "location": "21 New Globe Walk",
        "vendor": "Cisco",
        "model": "3850",
        "ios": "3.6.XE",
        "ip": "10.255.0.101",
        "vlans": "10,20,30",
        "routing": True
    }
}
# print(london_co[input("Введите имя устройства:  ")])
#5.1a
"""Переделать скрипт из задания 5.1 таким образом, чтобы, кроме имени устройства, запрашивался также параметр
устройства, который нужно отобразить.
Вывести информацию о соответствующем параметре, указанного устройства.
Пример выполнения скрипта:
Введите имя устройства: r1
Введите имя параметра: ios
15.4
"""
# print(london_co[input("Введите имя устройства:  ")][input("Введите имя параметра: ")])
#5.1b
"""
Переделать скрипт из задания 5.1a таким образом, чтобы, при запросе параметра, отображался список возможных параметров.
 Список параметров надо получить из словаря, а не прописывать вручную.
Вывести информацию о соответствующем параметре, указанного устройства.
Введите имя устройства: r1
Введите имя параметра (location, vendor, model, ios, ip): ip
10.255.0.1
Введите имя устройства: sw1r
Введите имя параметра (location, vendor, model, ios, ip, vlans, routing): ip
10.255.0.101
"""

# device = input("Введите имя устройства:  ")
# device2 = "(" + ','.join(tuple(london_co[device].keys())) + ")"
# param = input(f'Введите имя параметра {device2}:  ')
# print(london_co[device][param])


#5.1c
"""Переделать скрипт из задания 5.1b таким образом, чтобы, при запросе параметра, которого нет в словаре устройства, 
отображалось сообщение „Такого параметра нет“. Задание относится только к параметрам устройств, не к самим устройствам.
Если выбран существующий параметр, вывести информацию о соответствующем параметре, указанного устройства.
Пример выполнения скрипта:
Введите имя устройства: r1
Введите имя параметра (ios, model, vendor, location, ip): ips
Такого параметра нет
"""

# device = input("Введите имя устройства:  ")
# device2 = "(" + ','.join(tuple(london_co[device].keys())) + ")"
# param = input(f'Введите имя параметра {device2}:  ')
# print(london_co[device].get(param, "Такого параметра нет"))

#5.1d
"""Переделать скрипт из задания 5.1c таким образом, чтобы, при запросе параметра, пользователь мог вводить название 
параметра в любом регистре.
Пример выполнения скрипта:
Введите имя устройства: r1
Введите имя параметра (ios, model, vendor, location, ip): IOS
15.4"""
# device = input("Введите имя устройства:  ")
# device2 = "(" + ','.join(tuple(london_co[device].keys())) + ")"
# param = input(f'Введите имя параметра {device2}:  ').lower()
#
# print(london_co[device].get(param, "Такого параметра нет"))
#5.2
"""
Запросить у пользователя ввод IP-сети в формате: 10.1.1.0/24
Затем вывести информацию о сети и маске в таком формате:
Network:
10        1         1         0
00001010  00000001  00000001  00000000
Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000
"""
network = input("Введите ip адрес в формате ***.***.***.****/** :   ")

ip, mask = network.split("/")
ip_list = ip.split(".")
mask = int(mask)

oct1, oct2, oct3, oct4 = [
    int(ip_list[0]),
    int(ip_list[1]),
    int(ip_list[2]),
    int(ip_list[3]),
]

bin_mask = "1" * mask + "0" * (32 - mask)
m1, m2, m3, m4 = [
    int(bin_mask[0:8], 2),
    int(bin_mask[8:16], 2),
    int(bin_mask[16:24], 2),
    int(bin_mask[24:32], 2),
]
print(bin_mask)
print(m1, m2, m3, m4)

ip_output = """
Network:
{0:<8}  {1:<8}  {2:<8}  {3:<8}
{0:08b}  {1:08b}  {2:08b}  {3:08b}"""

mask_output = """
Mask:
/{0}
{1:<8}  {2:<8}  {3:<8}  {4:<8}
{1:08b}  {2:08b}  {3:08b}  {4:08b}
"""

print(ip_output.format(oct1, oct2, oct3, oct4))
print(mask_output.format(mask, m1, m2, m3, m4))


#5.2a



#5.4


#5.3
"""
Дополнить скрипт из задания 5.3 таким образом, чтобы, в зависимости от выбранного режима, задавались разные вопросы в 
запросе о номере VLANа или списка VLANов:
для access: «Введите номер VLAN:»
для trunk: «Введите разрешенные VLANы:»
Ограничение: Все задания надо выполнять используя только пройденные темы. То есть эту задачу можно решить без 
использования условия if и циклов for/while.
"""
access_template = [
    "switchport mode access", "switchport access vlan {}",
    "switchport nonegotiate", "spanning-tree portfast",
    "spanning-tree bpduguard enable"
]

trunk_template = [
    "switchport trunk encapsulation dot1q", "switchport mode trunk",
    "switchport trunk allowed vlan {}"
]

template = {'access': access_template, 'trunk': trunk_template}
question = {'access': 'Р’РІРµРґРёС‚Рµ РЅРѕРјРµСЂ VLAN: ', 'trunk': 'Р’РІРµРґРёС‚Рµ СЂР°Р·СЂРµС€РµРЅРЅС‹Рµ VLANС‹:'}

mode = input("Р’РІРµРґРёС‚Рµ СЂРµР¶РёРј СЂР°Р±РѕС‚С‹ РёРЅС‚РµСЂС„РµР№СЃР° (access/trunk): ")
interface = input("Р’РІРµРґРёС‚Рµ С‚РёРї Рё РЅРѕРјРµСЂ РёРЅС‚РµСЂС„РµР№СЃР°: ")
vlan = input(f"{question[mode]}")

print(f"interface {interface}")
print('\n'.join(template[mode]).format(vlan))

#5.6



#5.7



#5.8


#5.9
